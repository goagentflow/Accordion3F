{"ast":null,"code":"var _jsxFileName = \"/Users/hamishnicklin/Accordion3F/src/components/GanttChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport * as XLSX from 'xlsx'; // Import the new library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GanttChart = ({\n  tasks,\n  bankHolidays = [],\n  onTaskDurationChange = () => {},\n  onTaskNameChange = () => {},\n  workingDaysNeeded = null,\n  onAddCustomTask = () => {}\n}) => {\n  _s();\n  // Drag state\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedTaskId, setDraggedTaskId] = useState(null);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [originalDuration, setOriginalDuration] = useState(0);\n  const containerRef = useRef(null);\n\n  // Task name editing state\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingTaskName, setEditingTaskName] = useState('');\n\n  // Custom task modal state\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskDuration, setNewTaskDuration] = useState(1);\n  const [insertAfterTask, setInsertAfterTask] = useState('');\n\n  // --- CONFIGURATION ---\n  const DAY_COLUMN_WIDTH = 48;\n  const ROW_HEIGHT = 80;\n  const HEADER_HEIGHT = 50;\n  const TASK_NAME_WIDTH = 320;\n\n  // Helper functions to check non-working days\n  const isBankHoliday = date => {\n    const dateStr = date.toISOString().split('T')[0];\n    return bankHolidays.includes(dateStr);\n  };\n  const isWeekend = date => {\n    const day = date.getDay();\n    return day === 0 || day === 6; // 0 is Sunday, 6 is Saturday\n  };\n  const getColumnBackground = date => {\n    if (isBankHoliday(date)) return 'bg-red-50';\n    if (isWeekend(date)) return 'bg-gray-50';\n    return 'bg-white';\n  };\n\n  // Helper function to count working days between two dates\n  const countWorkingDays = (startDate, endDate) => {\n    let count = 0;\n    const current = new Date(startDate);\n    const end = new Date(endDate);\n    while (current <= end) {\n      if (!isBankHoliday(current) && !isWeekend(current)) {\n        count++;\n      }\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  };\n\n  // Helper function to add working days to a date\n  const addWorkingDays = (startDate, workingDaysToAdd) => {\n    if (workingDaysToAdd <= 0) {\n      return new Date(startDate);\n    }\n    let currentDate = new Date(startDate);\n    let remainingDays = workingDaysToAdd - 1;\n    while (remainingDays > 0) {\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (!isBankHoliday(currentDate) && !isWeekend(currentDate)) {\n        remainingDays--;\n      }\n    }\n\n    // Ensure the final day is a working day\n    while (isBankHoliday(currentDate) || isWeekend(currentDate)) {\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return currentDate;\n  };\n\n  // Mouse event handlers for drag functionality\n  const handleMouseDown = (e, taskId, taskStart, taskEnd) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const isRightEdge = e.clientX > rect.right - 15; // 15px from right edge\n\n    if (isRightEdge) {\n      setIsDragging(true);\n      setDraggedTaskId(taskId);\n      setDragStartX(e.clientX);\n      const startDate = new Date(taskStart);\n      const endDate = new Date(taskEnd);\n      const duration = countWorkingDays(startDate, endDate);\n      setOriginalDuration(duration);\n      e.preventDefault();\n    }\n  };\n  const handleMouseMove = e => {\n    if (!isDragging || !draggedTaskId) return;\n    const deltaX = e.clientX - dragStartX;\n    const deltaDays = Math.round(deltaX / DAY_COLUMN_WIDTH);\n\n    // Find the task being dragged\n    const task = tasks.find(t => t.id === draggedTaskId);\n    if (!task) return;\n    const newDuration = Math.max(1, originalDuration + deltaDays); // Minimum 1 day\n\n    // Calculate new end date based on working days\n    const startDate = new Date(task.start);\n    const newEndDate = addWorkingDays(startDate, newDuration);\n\n    // Call the callback to update the task\n    onTaskDurationChange(draggedTaskId, newDuration, newEndDate.toISOString().split('T')[0]);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setDraggedTaskId(null);\n    setDragStartX(0);\n    setOriginalDuration(0);\n  };\n  const handleMouseMoveOverTask = e => {\n    if (!isDragging) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const isRightEdge = e.clientX > rect.right - 15;\n      if (isRightEdge) {\n        e.currentTarget.style.cursor = 'ew-resize';\n      } else {\n        e.currentTarget.style.cursor = 'pointer';\n      }\n    }\n  };\n  const handleMouseLeave = e => {\n    if (!isDragging) {\n      e.currentTarget.style.cursor = 'pointer';\n    }\n  };\n\n  // Task name editing handlers\n  const handleTaskNameClick = (taskId, currentName) => {\n    setEditingTaskId(taskId);\n    setEditingTaskName(currentName);\n  };\n  const handleTaskNameSave = () => {\n    if (editingTaskName.trim()) {\n      onTaskNameChange(editingTaskId, editingTaskName.trim());\n    }\n    setEditingTaskId(null);\n    setEditingTaskName('');\n  };\n  const handleTaskNameCancel = () => {\n    setEditingTaskId(null);\n    setEditingTaskName('');\n  };\n  const handleTaskNameKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleTaskNameSave();\n    } else if (e.key === 'Escape') {\n      handleTaskNameCancel();\n    }\n  };\n\n  // Custom task modal handlers\n  const handleOpenAddTaskModal = () => {\n    setShowAddTaskModal(true);\n    setNewTaskName('');\n    setNewTaskDuration(1);\n    setInsertAfterTask('');\n  };\n  const handleCloseAddTaskModal = () => {\n    setShowAddTaskModal(false);\n    setNewTaskName('');\n    setNewTaskDuration(1);\n    setInsertAfterTask('');\n  };\n  const handleSubmitCustomTask = () => {\n    if (!newTaskName.trim() || newTaskDuration < 1) {\n      return;\n    }\n    onAddCustomTask({\n      name: newTaskName.trim(),\n      duration: newTaskDuration,\n      insertAfterTaskId: insertAfterTask\n    });\n    handleCloseAddTaskModal();\n  };\n\n  // Add global mouse event listeners\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, draggedTaskId, dragStartX, originalDuration]);\n  if (!tasks || tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500 py-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg\",\n        children: \"Your timeline will appear here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"Set a start date and select some assets to begin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n\n  // --- DATE CALCULATIONS ---\n  const startDates = tasks.map(task => new Date(task.start));\n  const endDates = tasks.map(task => new Date(task.end));\n  const minDate = new Date(Math.min(...startDates));\n  const maxDate = new Date(Math.max(...endDates));\n  const totalDays = Math.ceil((maxDate - minDate) / (1000 * 60 * 60 * 24)) + 1;\n  const dateColumns = Array.from({\n    length: totalDays\n  }, (_, i) => {\n    const date = new Date(minDate);\n    date.setDate(minDate.getDate() + i);\n    return date;\n  });\n  const exportToExcel = () => {\n    // 1. Create the header row for the Excel sheet\n    const header = ['Task Name', ...dateColumns.map(d => d.toLocaleDateString())];\n\n    // 2. Create a data row for each task\n    const data = tasks.map(task => {\n      const taskRow = Array(header.length).fill(''); // Create an empty row\n      taskRow[0] = task.name; // Set the task name in the first column\n\n      const taskStart = new Date(task.start);\n      const taskEnd = new Date(task.end);\n\n      // 3. Place a marker ('X') in the date columns where the task is active\n      dateColumns.forEach((date, index) => {\n        if (date >= taskStart && date <= taskEnd) {\n          taskRow[index + 1] = 'X'; // +1 to account for the 'Task Name' column\n        }\n      });\n      return taskRow;\n    });\n\n    // 4. Combine header and data into a single array for the worksheet\n    const worksheetData = [header, ...data];\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // 5. Set column widths for better readability\n    const columnWidths = [{\n      wch: 60\n    },\n    // Task Name column\n    ...dateColumns.map(() => ({\n      wch: 12\n    })) // Date columns\n    ];\n    worksheet['!cols'] = columnWidths;\n\n    // 6. Create the workbook and trigger the download\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Timeline');\n    XLSX.writeFile(workbook, `timeline_${new Date().toISOString().split('T')[0]}.xlsx`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-blue-800\",\n            children: \"Project Gantt Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-blue-600\",\n            children: [tasks.length, \" tasks \\u2022 \", totalDays, \" days total \\u2022 \", minDate.toLocaleDateString(), \" to \", maxDate.toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-blue-500 mt-1\",\n            children: \"\\uD83D\\uDCA1 Click on any task name to edit it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOpenAddTaskModal,\n          className: \"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"\\u2795\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), \"Add Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-auto border border-gray-300 rounded-lg\",\n      style: {\n        maxHeight: '75vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative min-w-max\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          style: {\n            position: 'sticky',\n            top: 0,\n            zIndex: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 border-b border-r border-gray-300 font-semibold text-gray-700 bg-white flex items-center\",\n            style: {\n              width: `${TASK_NAME_WIDTH}px`,\n              minWidth: `${TASK_NAME_WIDTH}px`,\n              position: 'sticky',\n              left: 0,\n              top: 0,\n              zIndex: 40,\n              background: 'white'\n            },\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), dateColumns.map((date, index) => {\n            // Array of day abbreviations, starting with Sunday\n            const dayAbbr = [\"Su\", \"M\", \"Tu\", \"W\", \"Th\", \"F\", \"Sa\"];\n            // Get the day abbreviation for this date\n            const day = dayAbbr[date.getDay()];\n            // Get the day of the month (number)\n            const dayOfMonth = date.getDate();\n            // Get the month abbreviation (e.g., Aug)\n            const month = date.toLocaleString('en', {\n              month: 'short'\n            });\n            // Format: M 4 Aug, Tu 5 Aug, etc.\n            const formatted = `${day} ${dayOfMonth} ${month}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-1 text-xs text-center border-b border-r border-gray-200 flex flex-col justify-center ${getColumnBackground(date)}`,\n              style: {\n                width: `${DAY_COLUMN_WIDTH}px`,\n                minWidth: `${DAY_COLUMN_WIDTH}px`,\n                position: 'sticky',\n                top: 0,\n                zIndex: 30,\n                background: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: [formatted, isBankHoliday(date) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-1 text-red-500\",\n                  title: \"Bank Holiday\",\n                  children: \"\\uD83C\\uDFE6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), tasks.map(task => {\n          const taskStart = new Date(task.start);\n          const taskEnd = new Date(task.end);\n          const startOffsetDays = Math.floor((taskStart - minDate) / (1000 * 60 * 60 * 24));\n          // Calculate working days instead of calendar days for duration display\n          const durationDays = countWorkingDays(taskStart, taskEnd);\n          const durationText = durationDays;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group flex\",\n            style: {\n              height: `${ROW_HEIGHT}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 border-b border-r border-gray-300 font-semibold text-gray-700 bg-white flex items-center\",\n              style: {\n                width: `${TASK_NAME_WIDTH}px`,\n                minWidth: `${TASK_NAME_WIDTH}px`,\n                position: 'sticky',\n                left: 0,\n                zIndex: 20,\n                background: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col w-full\",\n                children: [editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editingTaskName,\n                    onChange: e => setEditingTaskName(e.target.value),\n                    onKeyDown: handleTaskNameKeyDown,\n                    onBlur: handleTaskNameSave,\n                    className: \"text-sm border rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                    autoFocus: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleTaskNameSave,\n                    className: \"text-xs bg-green-500 text-white px-1 py-1 rounded hover:bg-green-600\",\n                    title: \"Save\",\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleTaskNameCancel,\n                    className: \"text-xs bg-gray-500 text-white px-1 py-1 rounded hover:bg-gray-600\",\n                    title: \"Cancel\",\n                    children: \"\\u2715\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-800 text-sm leading-tight whitespace-normal cursor-pointer hover:bg-blue-50 px-1 py-1 rounded\",\n                  onClick: () => handleTaskNameClick(task.id, task.name),\n                  title: \"Click to edit task name\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: task.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-xs text-gray-400\",\n                      title: \"Click to edit\",\n                      children: \"\\u270F\\uFE0F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500 mt-1\",\n                  children: [durationText, \" day\", durationText !== 1 ? 's' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative border-b border-gray-200\",\n              style: {\n                width: `${dateColumns.length * DAY_COLUMN_WIDTH}px`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex h-full\",\n                children: dateColumns.map((date, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `border-r border-gray-200 ${getColumnBackground(date)}`,\n                  style: {\n                    width: `${DAY_COLUMN_WIDTH}px`,\n                    minWidth: `${DAY_COLUMN_WIDTH}px`\n                  }\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), (() => {\n                const bars = [];\n                let currentDate = new Date(taskStart);\n                let workingDaysCounted = 0;\n                while (currentDate <= taskEnd && workingDaysCounted < durationDays) {\n                  if (!isBankHoliday(currentDate) && !isWeekend(currentDate)) {\n                    const dayOffset = Math.floor((currentDate - minDate) / (1000 * 60 * 60 * 24));\n                    bars.push(/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `absolute top-1/2 -translate-y-1/2 h-10 bg-blue-500 rounded shadow-sm flex items-center justify-start px-2 cursor-pointer transition-all ${isDragging && draggedTaskId === task.id ? 'ring-2 ring-blue-300 ring-opacity-50 shadow-lg' : ''}`,\n                      style: {\n                        left: `${dayOffset * DAY_COLUMN_WIDTH}px`,\n                        width: `${DAY_COLUMN_WIDTH}px`\n                      },\n                      onMouseDown: e => handleMouseDown(e, task.id, task.start, task.end),\n                      onMouseMove: handleMouseMoveOverTask,\n                      onMouseLeave: handleMouseLeave,\n                      children: [workingDaysCounted === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-white text-xs font-medium truncate\",\n                        children: task.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 31\n                      }, this), workingDaysCounted === durationDays - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"absolute right-0 top-0 bottom-0 w-2 bg-blue-600 rounded-r opacity-0 hover:opacity-100 transition-opacity cursor-ew-resize\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute right-1 top-1/2 transform -translate-y-1/2 text-white text-xs\",\n                          children: \"\\u22EE\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 461,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 31\n                      }, this)]\n                    }, `${task.id}-${currentDate.toISOString().split('T')[0]}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 27\n                    }, this));\n                    workingDaysCounted++;\n                  }\n                  currentDate.setDate(currentDate.getDate() + 1);\n                }\n                return bars;\n              })()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), workingDaysNeeded && workingDaysNeeded.needed > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-50 bg-white border border-red-300 rounded-lg shadow-lg p-4 max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-base font-semibold text-gray-800 mb-2\",\n        children: \"\\u26A0\\uFE0F Timeline Alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-bold text-red-600 mb-2\",\n        children: [workingDaysNeeded.needed, \" day\", workingDaysNeeded.needed !== 1 ? 's' : '', \" need to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: \"Adjust task durations to start on time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }, this), isDragging && workingDaysNeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-50 bg-white border border-gray-300 rounded-lg shadow-lg p-3 max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium text-gray-700 mb-1\",\n        children: \"Timeline Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-sm ${workingDaysNeeded.needed > 0 ? 'text-red-600' : workingDaysNeeded.needed < 0 ? 'text-green-600' : 'text-blue-600'}`,\n        children: workingDaysNeeded.needed > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u26A0\\uFE0F \", workingDaysNeeded.needed, \" day\", workingDaysNeeded.needed !== 1 ? 's' : '', \" need to be saved\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 15\n        }, this) : workingDaysNeeded.needed < 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2705 \", Math.abs(workingDaysNeeded.needed), \" day\", Math.abs(workingDaysNeeded.needed) !== 1 ? 's' : '', \" to spare\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAF You're on target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500 mt-1\",\n        children: [\"Available: \", workingDaysNeeded.available, \" | Allocated: \", workingDaysNeeded.allocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 border-t border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-medium text-gray-700 mb-3\",\n        children: \"Export Timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel // UPDATED BUTTON\n          ,\n          className: \"px-4 py-2 bg-green-500 text-white text-sm rounded-md hover:bg-green-600 transition-colors\",\n          children: \"\\uD83D\\uDCCA Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.print(),\n          className: \"px-4 py-2 bg-gray-500 text-white text-sm rounded-md hover:bg-gray-600 transition-colors\",\n          children: \"\\uD83D\\uDDA8\\uFE0F Print Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), showAddTaskModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 w-full max-w-md mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-gray-800\",\n            children: \"Add Custom Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseAddTaskModal,\n            className: \"text-gray-400 hover:text-gray-600 text-xl font-bold\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Task Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTaskName,\n              onChange: e => setNewTaskName(e.target.value),\n              placeholder: \"e.g., Source talent, Organise translation\",\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Duration (working days) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              value: newTaskDuration,\n              onChange: e => setNewTaskDuration(Math.max(1, parseInt(e.target.value) || 1)),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Insert After\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: insertAfterTask,\n              onChange: e => setInsertAfterTask(e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"At the beginning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: task.id,\n                children: task.name\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseAddTaskModal,\n            className: \"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitCustomTask,\n            disabled: !newTaskName.trim(),\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"0yp75NZ2FVZXlQm+FWufIC62+OI=\");\n_c = GanttChart;\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useState","useRef","XLSX","jsxDEV","_jsxDEV","GanttChart","tasks","bankHolidays","onTaskDurationChange","onTaskNameChange","workingDaysNeeded","onAddCustomTask","_s","isDragging","setIsDragging","draggedTaskId","setDraggedTaskId","dragStartX","setDragStartX","originalDuration","setOriginalDuration","containerRef","editingTaskId","setEditingTaskId","editingTaskName","setEditingTaskName","showAddTaskModal","setShowAddTaskModal","newTaskName","setNewTaskName","newTaskDuration","setNewTaskDuration","insertAfterTask","setInsertAfterTask","DAY_COLUMN_WIDTH","ROW_HEIGHT","HEADER_HEIGHT","TASK_NAME_WIDTH","isBankHoliday","date","dateStr","toISOString","split","includes","isWeekend","day","getDay","getColumnBackground","countWorkingDays","startDate","endDate","count","current","Date","end","setDate","getDate","addWorkingDays","workingDaysToAdd","currentDate","remainingDays","handleMouseDown","e","taskId","taskStart","taskEnd","rect","currentTarget","getBoundingClientRect","isRightEdge","clientX","right","duration","preventDefault","handleMouseMove","deltaX","deltaDays","Math","round","task","find","t","id","newDuration","max","start","newEndDate","handleMouseUp","handleMouseMoveOverTask","style","cursor","handleMouseLeave","handleTaskNameClick","currentName","handleTaskNameSave","trim","handleTaskNameCancel","handleTaskNameKeyDown","key","handleOpenAddTaskModal","handleCloseAddTaskModal","handleSubmitCustomTask","name","insertAfterTaskId","useEffect","document","addEventListener","removeEventListener","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startDates","map","endDates","minDate","min","maxDate","totalDays","ceil","dateColumns","Array","from","_","i","exportToExcel","header","d","toLocaleDateString","data","taskRow","fill","forEach","index","worksheetData","worksheet","utils","aoa_to_sheet","columnWidths","wch","workbook","book_new","book_append_sheet","writeFile","onClick","maxHeight","position","top","zIndex","width","minWidth","left","background","dayAbbr","dayOfMonth","month","toLocaleString","formatted","title","startOffsetDays","floor","durationDays","durationText","height","type","value","onChange","target","onKeyDown","onBlur","autoFocus","colIndex","bars","workingDaysCounted","dayOffset","push","onMouseDown","onMouseMove","onMouseLeave","needed","abs","available","allocated","window","print","placeholder","parseInt","disabled","_c","$RefreshReg$"],"sources":["/Users/hamishnicklin/Accordion3F/src/components/GanttChart.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport * as XLSX from 'xlsx'; // Import the new library\n\nconst GanttChart = ({ tasks, bankHolidays = [], onTaskDurationChange = () => {}, onTaskNameChange = () => {}, workingDaysNeeded = null, onAddCustomTask = () => {} }) => {\n  // Drag state\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedTaskId, setDraggedTaskId] = useState(null);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [originalDuration, setOriginalDuration] = useState(0);\n  const containerRef = useRef(null);\n\n  // Task name editing state\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingTaskName, setEditingTaskName] = useState('');\n\n  // Custom task modal state\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newTaskDuration, setNewTaskDuration] = useState(1);\n  const [insertAfterTask, setInsertAfterTask] = useState('');\n\n  // --- CONFIGURATION ---\n  const DAY_COLUMN_WIDTH = 48;\n  const ROW_HEIGHT = 80;\n  const HEADER_HEIGHT = 50;\n  const TASK_NAME_WIDTH = 320;\n\n  // Helper functions to check non-working days\n  const isBankHoliday = (date) => {\n    const dateStr = date.toISOString().split('T')[0];\n    return bankHolidays.includes(dateStr);\n  };\n\n  const isWeekend = (date) => {\n    const day = date.getDay();\n    return day === 0 || day === 6; // 0 is Sunday, 6 is Saturday\n  };\n\n  const getColumnBackground = (date) => {\n    if (isBankHoliday(date)) return 'bg-red-50';\n    if (isWeekend(date)) return 'bg-gray-50';\n    return 'bg-white';\n  };\n\n  // Helper function to count working days between two dates\n  const countWorkingDays = (startDate, endDate) => {\n    let count = 0;\n    const current = new Date(startDate);\n    const end = new Date(endDate);\n    \n    while (current <= end) {\n      if (!isBankHoliday(current) && !isWeekend(current)) {\n        count++;\n      }\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  };\n\n  // Helper function to add working days to a date\n  const addWorkingDays = (startDate, workingDaysToAdd) => {\n    if (workingDaysToAdd <= 0) {\n      return new Date(startDate);\n    }\n    let currentDate = new Date(startDate);\n    let remainingDays = workingDaysToAdd - 1;\n    \n    while (remainingDays > 0) {\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (!isBankHoliday(currentDate) && !isWeekend(currentDate)) {\n        remainingDays--;\n      }\n    }\n    \n    // Ensure the final day is a working day\n    while (isBankHoliday(currentDate) || isWeekend(currentDate)) {\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return currentDate;\n  };\n\n  // Mouse event handlers for drag functionality\n  const handleMouseDown = (e, taskId, taskStart, taskEnd) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const isRightEdge = e.clientX > rect.right - 15; // 15px from right edge\n    \n    if (isRightEdge) {\n      setIsDragging(true);\n      setDraggedTaskId(taskId);\n      setDragStartX(e.clientX);\n      \n      const startDate = new Date(taskStart);\n      const endDate = new Date(taskEnd);\n      const duration = countWorkingDays(startDate, endDate);\n      setOriginalDuration(duration);\n      \n      e.preventDefault();\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDragging || !draggedTaskId) return;\n    \n    const deltaX = e.clientX - dragStartX;\n    const deltaDays = Math.round(deltaX / DAY_COLUMN_WIDTH);\n    \n    // Find the task being dragged\n    const task = tasks.find(t => t.id === draggedTaskId);\n    if (!task) return;\n    \n    const newDuration = Math.max(1, originalDuration + deltaDays); // Minimum 1 day\n    \n    // Calculate new end date based on working days\n    const startDate = new Date(task.start);\n    const newEndDate = addWorkingDays(startDate, newDuration);\n    \n    // Call the callback to update the task\n    onTaskDurationChange(draggedTaskId, newDuration, newEndDate.toISOString().split('T')[0]);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setDraggedTaskId(null);\n    setDragStartX(0);\n    setOriginalDuration(0);\n  };\n\n  const handleMouseMoveOverTask = (e) => {\n    if (!isDragging) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      const isRightEdge = e.clientX > rect.right - 15;\n      if (isRightEdge) {\n        e.currentTarget.style.cursor = 'ew-resize';\n      } else {\n        e.currentTarget.style.cursor = 'pointer';\n      }\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    if (!isDragging) {\n      e.currentTarget.style.cursor = 'pointer';\n    }\n  };\n\n  // Task name editing handlers\n  const handleTaskNameClick = (taskId, currentName) => {\n    setEditingTaskId(taskId);\n    setEditingTaskName(currentName);\n  };\n\n  const handleTaskNameSave = () => {\n    if (editingTaskName.trim()) {\n      onTaskNameChange(editingTaskId, editingTaskName.trim());\n    }\n    setEditingTaskId(null);\n    setEditingTaskName('');\n  };\n\n  const handleTaskNameCancel = () => {\n    setEditingTaskId(null);\n    setEditingTaskName('');\n  };\n\n  const handleTaskNameKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleTaskNameSave();\n    } else if (e.key === 'Escape') {\n      handleTaskNameCancel();\n    }\n  };\n\n  // Custom task modal handlers\n  const handleOpenAddTaskModal = () => {\n    setShowAddTaskModal(true);\n    setNewTaskName('');\n    setNewTaskDuration(1);\n    setInsertAfterTask('');\n  };\n\n  const handleCloseAddTaskModal = () => {\n    setShowAddTaskModal(false);\n    setNewTaskName('');\n    setNewTaskDuration(1);\n    setInsertAfterTask('');\n  };\n\n  const handleSubmitCustomTask = () => {\n    if (!newTaskName.trim() || newTaskDuration < 1) {\n      return;\n    }\n\n    onAddCustomTask({\n      name: newTaskName.trim(),\n      duration: newTaskDuration,\n      insertAfterTaskId: insertAfterTask\n    });\n\n    handleCloseAddTaskModal();\n  };\n\n  // Add global mouse event listeners\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, draggedTaskId, dragStartX, originalDuration]);\n\n  if (!tasks || tasks.length === 0) {\n    return (\n      <div className=\"text-center text-gray-500 py-10\">\n        <p className=\"text-lg\">Your timeline will appear here.</p>\n        <p className=\"text-sm\">Set a start date and select some assets to begin.</p>\n      </div>\n    );\n  }\n\n  // --- DATE CALCULATIONS ---\n  const startDates = tasks.map(task => new Date(task.start));\n  const endDates = tasks.map(task => new Date(task.end));\n  const minDate = new Date(Math.min(...startDates));\n  const maxDate = new Date(Math.max(...endDates));\n  const totalDays = Math.ceil((maxDate - minDate) / (1000 * 60 * 60 * 24)) + 1;\n  const dateColumns = Array.from({ length: totalDays }, (_, i) => {\n    const date = new Date(minDate);\n    date.setDate(minDate.getDate() + i);\n    return date;\n  });\n\n  const exportToExcel = () => {\n    // 1. Create the header row for the Excel sheet\n    const header = ['Task Name', ...dateColumns.map(d => d.toLocaleDateString())];\n    \n    // 2. Create a data row for each task\n    const data = tasks.map(task => {\n      const taskRow = Array(header.length).fill(''); // Create an empty row\n      taskRow[0] = task.name; // Set the task name in the first column\n\n      const taskStart = new Date(task.start);\n      const taskEnd = new Date(task.end);\n\n      // 3. Place a marker ('X') in the date columns where the task is active\n      dateColumns.forEach((date, index) => {\n        if (date >= taskStart && date <= taskEnd) {\n          taskRow[index + 1] = 'X'; // +1 to account for the 'Task Name' column\n        }\n      });\n      return taskRow;\n    });\n\n    // 4. Combine header and data into a single array for the worksheet\n    const worksheetData = [header, ...data];\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // 5. Set column widths for better readability\n    const columnWidths = [\n      { wch: 60 }, // Task Name column\n      ...dateColumns.map(() => ({ wch: 12 })) // Date columns\n    ];\n    worksheet['!cols'] = columnWidths;\n    \n    // 6. Create the workbook and trigger the download\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Timeline');\n    XLSX.writeFile(workbook, `timeline_${new Date().toISOString().split('T')[0]}.xlsx`);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {/* Summary Header */}\n      <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-blue-800\">Project Gantt Chart</h3>\n            <p className=\"text-sm text-blue-600\">\n              {tasks.length} tasks • {totalDays} days total • {minDate.toLocaleDateString()} to {maxDate.toLocaleDateString()}\n            </p>\n            <p className=\"text-xs text-blue-500 mt-1\">\n              💡 Click on any task name to edit it\n            </p>\n          </div>\n          <button\n            onClick={handleOpenAddTaskModal}\n            className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors flex items-center\"\n          >\n            <span className=\"mr-2\">➕</span>\n            Add Task\n          </button>\n        </div>\n      </div>\n\n      {/* Main Scrollable Container */}\n      {/* ... (The Gantt chart display JSX remains the same) ... */}\n      <div className=\"overflow-auto border border-gray-300 rounded-lg\" style={{ maxHeight: '75vh' }}>\n        <div className=\"relative min-w-max\">\n          {/* HEADER ROW */}\n          <div className=\"flex\" style={{ position: 'sticky', top: 0, zIndex: 30 }}>\n            {/* Top-left cell: sticky both top and left */}\n            <div\n              className=\"p-3 border-b border-r border-gray-300 font-semibold text-gray-700 bg-white flex items-center\"\n              style={{\n                width: `${TASK_NAME_WIDTH}px`,\n                minWidth: `${TASK_NAME_WIDTH}px`,\n                position: 'sticky',\n                left: 0,\n                top: 0,\n                zIndex: 40,\n                background: 'white',\n              }}\n            >\n              Task Name\n            </div>\n            {/* Date headers: sticky top only */}\n            {dateColumns.map((date, index) => {\n              // Array of day abbreviations, starting with Sunday\n              const dayAbbr = [\"Su\", \"M\", \"Tu\", \"W\", \"Th\", \"F\", \"Sa\"];\n              // Get the day abbreviation for this date\n              const day = dayAbbr[date.getDay()];\n              // Get the day of the month (number)\n              const dayOfMonth = date.getDate();\n              // Get the month abbreviation (e.g., Aug)\n              const month = date.toLocaleString('en', { month: 'short' });\n              // Format: M 4 Aug, Tu 5 Aug, etc.\n              const formatted = `${day} ${dayOfMonth} ${month}`;\n              return (\n                <div\n                  key={index}\n                  className={`p-1 text-xs text-center border-b border-r border-gray-200 flex flex-col justify-center ${getColumnBackground(date)}`}\n                  style={{\n                    width: `${DAY_COLUMN_WIDTH}px`,\n                    minWidth: `${DAY_COLUMN_WIDTH}px`,\n                    position: 'sticky',\n                    top: 0,\n                    zIndex: 30,\n                    background: 'white',\n                  }}\n                >\n                  {/* Show the formatted date with day abbreviation */}\n                  <div className=\"font-medium\">\n                    {formatted}\n                    {isBankHoliday(date) && (\n                      <span className=\"ml-1 text-red-500\" title=\"Bank Holiday\">🏦</span>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {/* TASK ROWS */}\n          {tasks.map((task) => {\n            const taskStart = new Date(task.start);\n            const taskEnd = new Date(task.end);\n            const startOffsetDays = Math.floor((taskStart - minDate) / (1000 * 60 * 60 * 24));\n            // Calculate working days instead of calendar days for duration display\n            const durationDays = countWorkingDays(taskStart, taskEnd);\n            const durationText = durationDays;\n            return (\n              <div key={task.id} className=\"group flex\" style={{ height: `${ROW_HEIGHT}px` }}>\n                {/* Task name column: sticky left only */}\n                <div\n                  className=\"p-3 border-b border-r border-gray-300 font-semibold text-gray-700 bg-white flex items-center\"\n                  style={{\n                    width: `${TASK_NAME_WIDTH}px`,\n                    minWidth: `${TASK_NAME_WIDTH}px`,\n                    position: 'sticky',\n                    left: 0,\n                    zIndex: 20,\n                    background: 'white',\n                  }}\n                >\n                  <div className=\"flex flex-col w-full\">\n                    {editingTaskId === task.id ? (\n                      <div className=\"flex items-center space-x-1\">\n                        <input\n                          type=\"text\"\n                          value={editingTaskName}\n                          onChange={(e) => setEditingTaskName(e.target.value)}\n                          onKeyDown={handleTaskNameKeyDown}\n                          onBlur={handleTaskNameSave}\n                          className=\"text-sm border rounded px-2 py-1 w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          autoFocus\n                        />\n                        <button\n                          onClick={handleTaskNameSave}\n                          className=\"text-xs bg-green-500 text-white px-1 py-1 rounded hover:bg-green-600\"\n                          title=\"Save\"\n                        >\n                          ✓\n                        </button>\n                        <button\n                          onClick={handleTaskNameCancel}\n                          className=\"text-xs bg-gray-500 text-white px-1 py-1 rounded hover:bg-gray-600\"\n                          title=\"Cancel\"\n                        >\n                          ✕\n                        </button>\n                      </div>\n                    ) : (\n                      <div \n                        className=\"font-medium text-gray-800 text-sm leading-tight whitespace-normal cursor-pointer hover:bg-blue-50 px-1 py-1 rounded\"\n                        onClick={() => handleTaskNameClick(task.id, task.name)}\n                        title=\"Click to edit task name\"\n                      >\n                        <div className=\"flex items-center\">\n                          <span>{task.name}</span>\n                          <span className=\"ml-2 text-xs text-gray-400\" title=\"Click to edit\">\n                            ✏️\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                    <div className=\"text-xs text-gray-500 mt-1\">{durationText} day{durationText !== 1 ? 's' : ''}</div>\n                  </div>\n                </div>\n                {/* Gantt bars and grid */}\n                <div className=\"relative border-b border-gray-200\" style={{ width: `${dateColumns.length * DAY_COLUMN_WIDTH}px` }}>\n                  <div className=\"flex h-full\">\n                    {dateColumns.map((date, colIndex) => (\n                      <div \n                        key={colIndex} \n                        className={`border-r border-gray-200 ${getColumnBackground(date)}`}\n                        style={{ width: `${DAY_COLUMN_WIDTH}px`, minWidth: `${DAY_COLUMN_WIDTH}px` }} \n                      />\n                    ))}\n                  </div>\n                  {/* Render task bars for each working day */}\n                  {(() => {\n                    const bars = [];\n                    let currentDate = new Date(taskStart);\n                    let workingDaysCounted = 0;\n                    \n                    while (currentDate <= taskEnd && workingDaysCounted < durationDays) {\n                      if (!isBankHoliday(currentDate) && !isWeekend(currentDate)) {\n                        const dayOffset = Math.floor((currentDate - minDate) / (1000 * 60 * 60 * 24));\n                        bars.push(\n                          <div\n                            key={`${task.id}-${currentDate.toISOString().split('T')[0]}`}\n                            className={`absolute top-1/2 -translate-y-1/2 h-10 bg-blue-500 rounded shadow-sm flex items-center justify-start px-2 cursor-pointer transition-all ${\n                              isDragging && draggedTaskId === task.id ? 'ring-2 ring-blue-300 ring-opacity-50 shadow-lg' : ''\n                            }`}\n                            style={{\n                              left: `${dayOffset * DAY_COLUMN_WIDTH}px`,\n                              width: `${DAY_COLUMN_WIDTH}px`,\n                            }}\n                            onMouseDown={(e) => handleMouseDown(e, task.id, task.start, task.end)}\n                            onMouseMove={handleMouseMoveOverTask}\n                            onMouseLeave={handleMouseLeave}\n                          >\n                            {workingDaysCounted === 0 && (\n                              <span className=\"text-white text-xs font-medium truncate\">{task.name}</span>\n                            )}\n                            {/* Drag handle indicator on the last working day */}\n                            {workingDaysCounted === durationDays - 1 && (\n                              <div className=\"absolute right-0 top-0 bottom-0 w-2 bg-blue-600 rounded-r opacity-0 hover:opacity-100 transition-opacity cursor-ew-resize\">\n                                <div className=\"absolute right-1 top-1/2 transform -translate-y-1/2 text-white text-xs\">⋮</div>\n                              </div>\n                            )}\n                          </div>\n                        );\n                        workingDaysCounted++;\n                      }\n                      currentDate.setDate(currentDate.getDate() + 1);\n                    }\n                    return bars;\n                  })()}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Floating Working Days Indicator (always visible when there are issues) */}\n      {workingDaysNeeded && workingDaysNeeded.needed > 0 && (\n        <div className=\"fixed top-4 right-4 z-50 bg-white border border-red-300 rounded-lg shadow-lg p-4 max-w-sm\">\n          <div className=\"text-base font-semibold text-gray-800 mb-2\">\n            ⚠️ Timeline Alert\n          </div>\n          <div className=\"text-lg font-bold text-red-600 mb-2\">\n            {workingDaysNeeded.needed} day{workingDaysNeeded.needed !== 1 ? 's' : ''} need to be saved\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            Adjust task durations to start on time\n          </div>\n        </div>\n      )}\n\n      {/* Floating Working Days Indicator (shown while dragging) */}\n      {isDragging && workingDaysNeeded && (\n        <div className=\"fixed top-4 right-4 z-50 bg-white border border-gray-300 rounded-lg shadow-lg p-3 max-w-xs\">\n          <div className=\"text-sm font-medium text-gray-700 mb-1\">\n            Timeline Status\n          </div>\n          <div className={`text-sm ${\n            workingDaysNeeded.needed > 0\n              ? 'text-red-600'\n              : workingDaysNeeded.needed < 0\n              ? 'text-green-600'\n              : 'text-blue-600'\n          }`}>\n            {workingDaysNeeded.needed > 0 ? (\n              <span>⚠️ {workingDaysNeeded.needed} day{workingDaysNeeded.needed !== 1 ? 's' : ''} need to be saved</span>\n            ) : workingDaysNeeded.needed < 0 ? (\n              <span>✅ {Math.abs(workingDaysNeeded.needed)} day{Math.abs(workingDaysNeeded.needed) !== 1 ? 's' : ''} to spare</span>\n            ) : (\n              <span>🎯 You're on target</span>\n            )}\n          </div>\n          <div className=\"text-xs text-gray-500 mt-1\">\n            Available: {workingDaysNeeded.available} | Allocated: {workingDaysNeeded.allocated}\n          </div>\n        </div>\n      )}\n\n      {/* Export Options */}\n      <div className=\"mt-6 p-4 border-t border-gray-200\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Export Timeline</h4>\n        <div className=\"flex space-x-3\">\n          <button \n            onClick={exportToExcel} // UPDATED BUTTON\n            className=\"px-4 py-2 bg-green-500 text-white text-sm rounded-md hover:bg-green-600 transition-colors\"\n          >\n            📊 Export to Excel\n          </button>\n          <button \n            onClick={() => window.print()}\n            className=\"px-4 py-2 bg-gray-500 text-white text-sm rounded-md hover:bg-gray-600 transition-colors\"\n          >\n            🖨️ Print Timeline\n          </button>\n        </div>\n      </div>\n\n      {/* Add Custom Task Modal */}\n      {showAddTaskModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-800\">Add Custom Task</h3>\n              <button\n                onClick={handleCloseAddTaskModal}\n                className=\"text-gray-400 hover:text-gray-600 text-xl font-bold\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Task Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={newTaskName}\n                  onChange={(e) => setNewTaskName(e.target.value)}\n                  placeholder=\"e.g., Source talent, Organise translation\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Duration (working days) *\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={newTaskDuration}\n                  onChange={(e) => setNewTaskDuration(Math.max(1, parseInt(e.target.value) || 1))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Insert After\n                </label>\n                <select\n                  value={insertAfterTask}\n                  onChange={(e) => setInsertAfterTask(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"\">At the beginning</option>\n                  {tasks.map((task, index) => (\n                    <option key={task.id} value={task.id}>\n                      {task.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={handleCloseAddTaskModal}\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSubmitCustomTask}\n                disabled={!newTaskName.trim()}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Add Task\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GanttChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
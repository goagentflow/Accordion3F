{"ast":null,"code":"var _jsxFileName = \"/Users/hamishnicklin/Desktop/Accordion/src/index.js\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport TimelineBuilder from './TimelineBuilder';\n\n// This function will initialize the React application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction initApp() {\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(TimelineBuilder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this));\n  } else {\n    console.error('Fatal Error: The root element was not found in the DOM.');\n  }\n}\n\n// This logic (from your original file) is important. \n// It ensures that we don't try to start the app until the page is ready.\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initApp);\n} else {\n  // The DOM is already ready\n  initApp();\n}","map":{"version":3,"names":["React","createRoot","TimelineBuilder","jsxDEV","_jsxDEV","initApp","container","document","getElementById","root","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console","error","readyState","addEventListener"],"sources":["/Users/hamishnicklin/Desktop/Accordion/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport TimelineBuilder from './TimelineBuilder';\n\n// This function will initialize the React application\nfunction initApp() {\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(\n      <React.StrictMode>\n        <TimelineBuilder />\n      </React.StrictMode>\n    );\n  } else {\n    console.error('Fatal Error: The root element was not found in the DOM.');\n  }\n}\n\n// This logic (from your original file) is important. \n// It ensures that we don't try to start the app until the page is ready.\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initApp);\n} else {\n  // The DOM is already ready\n  initApp();\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAA,EAAG;EACjB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACjD,IAAIF,SAAS,EAAE;IACb,MAAMG,IAAI,GAAGR,UAAU,CAACK,SAAS,CAAC;IAClCG,IAAI,CAACC,MAAM,cACTN,OAAA,CAACJ,KAAK,CAACW,UAAU;MAAAC,QAAA,eACfR,OAAA,CAACF,eAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACpB,CAAC;EACH,CAAC,MAAM;IACLC,OAAO,CAACC,KAAK,CAAC,yDAAyD,CAAC;EAC1E;AACF;;AAEA;AACA;AACA,IAAIX,QAAQ,CAACY,UAAU,KAAK,SAAS,EAAE;EACrCZ,QAAQ,CAACa,gBAAgB,CAAC,kBAAkB,EAAEf,OAAO,CAAC;AACxD,CAAC,MAAM;EACL;EACAA,OAAO,CAAC,CAAC;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}